{
	"name": "linkedService-Functions",
	"properties": {
		"folder": {
			"name": "common"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "51ba0753-0757-4e39-8558-70b4bb5fd16b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import json"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def GetSDPDatabaseName(SDPLinkedServiceName):\r\n",
					"    # ##########################################################################################################################  \r\n",
					"    # Function: GetSDPDatabaseName\r\n",
					"    # \r\n",
					"    # Parameters:\r\n",
					"    # SDPLinkedServiceName = Linked service name for SQL Dedicated Pool\r\n",
					"    # \r\n",
					"    # Returns:\r\n",
					"    # The name of SQL Dedicated Pool Database Name\r\n",
					"    # ##########################################################################################################################     \r\n",
					"    linkedServiceProperties = mssparkutils.credentials.getPropertiesAll(SDPLinkedServiceName)\r\n",
					"    SDPDatabaseName = json.loads(linkedServiceProperties).get('Database')\r\n",
					"    SDPDatabaseName = SDPDatabaseName.replace('https://','')\r\n",
					"    return SDPDatabaseName"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def GetLinkedServiceEndpoint(LinkedServiceName):\r\n",
					"    # ##########################################################################################################################  \r\n",
					"    # Function: GetLinkedServiceEndpoint\r\n",
					"    # \r\n",
					"    # Parameters:\r\n",
					"    # LinkedServiceName = Linked service name Storage Account\r\n",
					"    # \r\n",
					"    # Returns:\r\n",
					"    # The Endpoint of the Linked Service Properties\r\n",
					"    # ##########################################################################################################################     \r\n",
					"    linkedServiceProperties = mssparkutils.credentials.getPropertiesAll(LinkedServiceName)\r\n",
					"    endpoint = json.loads(linkedServiceProperties).get('Endpoint')\r\n",
					"    endpoint = endpoint.replace('https://','')\r\n",
					"    return endpoint"
				],
				"execution_count": null
			}
		]
	}
}