{
	"name": "L1Transform-SEC-Form10Q",
	"properties": {
		"description": "Notebook to summarize SEC Form 10Q statement using AOAI",
		"folder": {
			"name": "L1Transform"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "smallMO",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": true,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0ab54433-4b9b-4051-826e-42e50af3deee"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e836675f-2508-4873-ad4f-754d70253b22/resourceGroups/rg-synapse-dataplatform/providers/Microsoft.Synapse/workspaces/ba-synapse01-kn3acb6lw3vr4/bigDataPools/smallMO",
				"name": "smallMO",
				"type": "Spark",
				"endpoint": "https://ba-synapse01-kn3acb6lw3vr4.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/smallMO",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Install SynapseML for this Session\r\n",
					"https://microsoft.github.io/SynapseML/docs/getting_started/installation/"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%configure -f\r\n",
					"{\r\n",
					"  \"name\": \"synapseml\",\r\n",
					"  \"conf\": {\r\n",
					"      \"spark.jars.packages\": \"com.microsoft.azure:synapseml_2.12:0.11.0,org.apache.spark:spark-avro_2.12:3.3.1\",\r\n",
					"      \"spark.jars.repositories\": \"https://mmlspark.azureedge.net/maven\",\r\n",
					"      \"spark.jars.excludes\": \"org.scala-lang:scala-reflect,org.apache.spark:spark-tags_2.12,org.scalactic:scalactic_2.12,org.scalatest:scalatest_2.12,com.fasterxml.jackson.core:jackson-databind\",\r\n",
					"      \"spark.yarn.user.classpath.first\": \"true\",\r\n",
					"      \"spark.sql.parquet.enableVectorizedReader\": \"false\",\r\n",
					"      \"spark.sql.legacy.replaceDatabricksSparkAvro.enabled\": \"true\"\r\n",
					"  }\r\n",
					"}"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"source": [
					"%run /common/datalake-functions {\"storageAccount\": \"badatalake01kn3acb6lw3vr\" }"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run /common/keyvault-functions {\"kvLinkedService\": \"keyvault01\"}"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Notebook Parameters"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"L1TransformInstanceID = None\r\n",
					"L1TransformID = None\r\n",
					"IngestID = None\r\n",
					"CustomParameters = None\r\n",
					"InputRawFileSystem = None\r\n",
					"InputRawFileFolder = None\r\n",
					"InputRawFile = None\r\n",
					"InputRawFileDelimiter = None\r\n",
					"InputFileHeaderFlag = None\r\n",
					"OutputL1CurateFileSystem = None\r\n",
					"OutputL1CuratedFolder = None\r\n",
					"OutputL1CuratedFile = None\r\n",
					"OutputL1CuratedFileDelimiter = None\r\n",
					"OutputL1CuratedFileFormat = None\r\n",
					"OutputL1CuratedFileWriteMode = None\r\n",
					"OutputDWStagingTable = None\r\n",
					"LookupColumns = None\r\n",
					"OutputDWTable = None\r\n",
					"OutputDWTableWriteMode = None\r\n",
					"ReRunL1TransformFlag = None\r\n",
					"DeltaName = None"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Parameters for Testing only, should be commented off\r\n",
					"L1TransformInstanceID = 6\r\n",
					"L1TransformID = 8\r\n",
					"IngestID = 5\r\n",
					"CustomParameters = None\r\n",
					"InputRawFileSystem = 'raw-bronze'\r\n",
					"InputRawFileFolder = 'sec-form10q/2023/04'\r\n",
					"InputRawFile = '2023-04-15_204450_sec-form10q.json'\r\n",
					"InputRawFileDelimiter = None\r\n",
					"InputFileHeaderFlag = None\r\n",
					"OutputL1CurateFileSystem = 'curated-silver'\r\n",
					"OutputL1CuratedFolder = 'sec-form10q/2023/04'\r\n",
					"OutputL1CuratedFile = 'standardized_2023-04-15_204525_sec-form10q.json'\r\n",
					"OutputL1CuratedFileDelimiter = None\r\n",
					"OutputL1CuratedFileFormat = 'json'\r\n",
					"OutputL1CuratedFileWriteMode = 'overwrite'\r\n",
					"OutputDWStagingTable = None\r\n",
					"LookupColumns = None\r\n",
					"OutputDWTable = None\r\n",
					"OutputDWTableWriteMode = None\r\n",
					"ReRunL1TransformFlag = None\r\n",
					"DeltaName = None"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"from pyspark.sql.types import *\r\n",
					"df = readFile(InputRawFileSystem, InputRawFileFolder +\"/\" + InputRawFile, None, None)\r\n",
					"\r\n",
					"# extract datapoints of interest and explode array\r\n",
					"# df.printSchema()\r\n",
					"\r\n",
					"df = df.select( col(\"org_name.content\").alias(\"org_name\")\r\n",
					"                ,col(\"org_address.content\").alias(\"org_address\")\r\n",
					"                ,col(\"org_jurisdiction.content\").alias(\"org_jurisdiction\")\r\n",
					"                ,col(\"org_stock_ticker.content\").alias(\"org_stock_ticker\")\r\n",
					"                ,col(\"reporting_quarter.content\").alias(\"reporting_quarter\")\r\n",
					"                ,col(\"stock_exchange.content\").alias(\"stock_exchange\")\r\n",
					"                ,regexp_replace(col(\"total_assets.content\"),\",\",\"\").cast(IntegerType()).alias(\"total_assets\")\r\n",
					"                ,regexp_replace(col(\"total_comprehensive_income.content\"),\",\",\"\").cast(IntegerType()).alias(\"total_comprehensive_income\")\r\n",
					"                ,regexp_replace(col(\"total_equity.content\"),\",\",\"\").cast(IntegerType()).alias(\"total_equity\")\r\n",
					"                ,regexp_replace(col(\"total_liabilities.content\"),\",\",\"\").cast(IntegerType()).alias(\"total_liabilities\")                \r\n",
					"                ,col(\"controls_procedures.content\").alias(\"controls_procedures\")\r\n",
					"                ,col(\"mgmt_analysis.content\").alias(\"mgmt_analysis\")\r\n",
					"                ,col(\"risk_disclosure.content\").alias(\"risk_disclosure\")\r\n",
					"            )\r\n",
					"\r\n",
					"display(df)\r\n",
					"\r\n",
					"\r\n",
					"#write flattened json to curated zone of data lake\r\n",
					"# writeFile(df,OutputL1CurateFileSystem, OutputL1CuratedFolder + \"/\" + OutputL1CuratedFile)"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import os\r\n",
					"from synapse.ml.core.platform import running_on_synapse, find_secret\r\n",
					"\r\n",
					""
				],
				"execution_count": null
			}
		]
	}
}