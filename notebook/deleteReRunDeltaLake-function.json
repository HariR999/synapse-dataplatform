{
	"name": "deleteReRunDeltaLake-function",
	"properties": {
		"folder": {
			"name": "common"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "mediumMO",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f3c2e220-b435-45c6-8f5e-98f5c34ee9a1"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e836675f-2508-4873-ad4f-754d70253b22/resourceGroups/rg-synapse-dataplatform/providers/Microsoft.Synapse/workspaces/ba-synapse01-kn3acb6lw3vr4/bigDataPools/mediumMO",
				"name": "mediumMO",
				"type": "Spark",
				"endpoint": "https://ba-synapse01-kn3acb6lw3vr4.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mediumMO",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import *\r\n",
					"import datetime\r\n",
					"from pyspark.sql.window import *\r\n",
					"from delta.Tables import *"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"source": [
					"def deleteReRunDeltaLake(Table, ColumnName, TransformInstanceID):\r\n",
					"    # ##########################################################################################################################  \r\n",
					"    # Function: deleteReRunDeltaLake\r\n",
					"    # Deletes records on Delta Table for a ReRun\r\n",
					"    #\r\n",
					"    # Parameters:\r\n",
					"    # Table = Name of Target Table\r\n",
					"    # ColumnName = ColumnName of TransformInstanceID\r\n",
					"    # TransformInstanceID = TransformInstanceID passed from Framework\r\n",
					"    # \r\n",
					"    # Returns:\r\n",
					"    TableExist = False\r\n",
					"    try:\r\n",
					"        deltaZone = mssparkutils.credentials.getSecretWithLS(\"Key Vault\",\"DeltaLake-StorageAccount\")\r\n",
					"        deltaZoneKey = mssparkutils.credentials.getSecretWithLS(\"Key Vault\",\"DeltaLake-StorageAccessKey\")\r\n",
					"        spark.conf.set(\"fs.azure.account.key.\" + deltaZone + \".dfs.core.windows.net\",  deltaZoneKey)\r\n",
					"        spark.read.table(Table)\r\n",
					"        TableExist = True\r\n",
					"        deltaTable = DeltaTable.forName(spark, Table)\r\n",
					"        deltaStatement = (ColumnName + ' = ' + str(TransformInstanceID))\r\n",
					"        deltaTable.delete(deltaStatement)\r\n",
					"        print(\"Records deleted: \" + Table)\r\n",
					"    except:\r\n",
					"        print(\"Table does not exist: \" + Table)"
				],
				"execution_count": 62
			}
		]
	}
}